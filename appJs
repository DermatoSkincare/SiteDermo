//------------------------------------------------------Conexão do banco de dados-------------------------------------------------------------------------------------------------------------//
const { Pool } = require('pg');
const express = require('express');

const pool = new Pool({
    user: 'postgres',
    host: 'paycobase.c308yocise5k.us-east-1.rds.amazonaws.com',
    database: 'db_paysage_corpal',
    password: 'postgres',
    port: 5432,
    ssl: { rejectUnauthorized: false } // Aceita certificados SSL não verificados
});
//--------------------------------------------------------------------Comando para inserção dos dados----------------------------------------------------------------------------------------//
async function inserirDados(colaborador) {
    const client = await pool.connect();
    try {
        const { nome, sexo, email, tipocontrato, telefone, dataentrada, datasaida } = colaborador; // Desestruturando o objeto
        const query = 'INSERT INTO colaborador (nome, sexo, email, tipocontrato, telefone, dataentrada, datasaida) VALUES ($1, $2, $3, $4, $5, $6, $7)';
        await client.query(query, [nome, sexo, email, tipocontrato, telefone, dataentrada, datasaida]);
    } finally {
        client.release();
    }
}
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
const app = express();
app.use(express.urlencoded({ extended: true })); // Para processar dados de formulários
app.use(express.json());

app.post('/submit', async (req, res) => {
    console.log('Dados recebidos:', req.body); // Adicione esta linha para depuração
    try {
        await inserirDados(req.body);
        res.status(200).send('Dados inseridos com sucesso!');
    } catch (error) {
        console.error('Erro ao inserir dados:', error);
        res.status(500).send('Erro ao inserir dados: ' + error.message);
    }
});

app.listen(3000, () => {
    console.log('Servidor rodando na porta 3000');
});
